name: Docker Image CI

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DOCKER_TARGET_PLATFORM: linux/arm64
    steps:
    - name: Fetch latest code
      uses: actions/checkout@v2
    
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1.2.0
      with:
        platforms: linux/arm64,linux/arm/v7
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1.6.0

    - name: "[aarch64] Pull latest ArchLinuxARM aarch64 image and import as Docker image"
      run: sudo docker import http://os.archlinuxarm.org/os/ArchLinuxARM-aarch64-latest.tar.gz archarm64:latest

    - name: "[aarch64] Build the custom image for sarchile"
      run: sudo docker build . --file Dockerfile.arm64 -t sarchile_arm64:latest
    
    # We can't use 'docker save' command to export the image because
    # it will compare the final sarchile image's SHA256 checksum
    # with non-existed layer.tar image.
    #
    # Thus, we will use 'docker export' command as workaround by deploy
    # sarchile image into a container then export that container's
    # rootfs into a tarball

    - name: "[aarch64] Deploy image to a container"
      run: sudo docker run -itd --name sarchile_arm64 sarchile_arm64:latest /bin/bash

    - name: "[aarch64] Export container rootfs into tarball image"
      run: sudo docker export sarchile_arm64 > base_arm64.tar

    - name: "[aarch64] Gzip the tarball image with highest compression level"
      run: gzip -9 base_arm64.tar
      
    # This time we build for armv7h

    - name: "[armv7h] Pull latest ArchLinuxARM armv7 image and import as Docker image"
      run: sudo docker import http://os.archlinuxarm.org/os/ArchLinuxARM-armv7-latest.tar.gz archarm:latest

    - name: "[armv7h] Build the custom image for sarchile"
      run: sudo docker build . --file Dockerfile.arm -t sarchile_arm:latest
    
    - name: "[armv7h] Deploy image to a container"
      run: sudo docker run -itd --name sarchile_arm sarchile_arm:latest /bin/bash

    - name: "[armv7h] Export container rootfs into tarball image"
      run: sudo docker export sarchile_arm > base_arm.tar

    - name: "[armv7h] Gzip the tarball image with highest compression level"
      run: gzip -9 base_arm.tar

    - name: Automatically push image to release
      uses: marvinpinto/action-automatic-releases@v1.2.1
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        automatic_release_tag: "base"
        draft: false
        prerelease: false
        title: ${{ steps.date.outputs.date }}
        files: |
          scripts/initscript.sh
          scripts/smgr.sh
          base_arm64.tar.gz
          base_arm.tar.gz
